import{b as l}from"../../../_chunks/chunk-F3LQTZS3.js";import{a as R}from"../../../_chunks/chunk-4R3YCOJU.js";import{a as g}from"../../../_chunks/chunk-2ZKMIJ5E.js";import"../../../_chunks/chunk-CXKY5VTN.js";import{h as x,k as b,l as D,m as v,n,o as y}from"../../../_chunks/chunk-ZETZTB2Q.js";import{c as p,f as c,g as f,i as u}from"../../../_chunks/chunk-THKE7DQS.js";var E=c(u(),1);var w=c(u(),1),I=c(u(),1);var T=c(u(),1),o=c(u(),1);var U=class U extends T.TemplatedDialog{constructor(e){super(e);this.permissions=new R(this.byId("Permissions"),{showRevoke:!0}),v.List({UserID:this.options.userID},t=>{this.permissions.value=t.Entities}),v.ListRolePermissions({UserID:this.options.userID},t=>{this.permissions.rolePermissions=t.Entities}),this.permissions.implicitPermissions=(0,o.getRemoteData)("Administration.ImplicitPermissions"),this.dialogTitle=(0,o.format)((0,o.localText)("Site.UserPermissionDialog.DialogTitle"),this.options.username)}getDialogButtons(){return[{text:(0,o.localText)("Dialogs.OkButton"),cssClass:"btn btn-primary",click:e=>{v.Update({UserID:this.options.userID,Permissions:this.permissions.value},t=>{this.dialogClose(),window.setTimeout(()=>(0,o.notifySuccess)((0,o.localText)("Site.UserPermissionDialog.SaveSuccess")),0)})}},{text:(0,o.localText)("Dialogs.CancelButton"),click:()=>this.dialogClose()}]}getTemplate(){return'<div id="~_Permissions"></div>'}};p(U,"UserPermissionDialog");var P=U;var a=c(u(),1),h=c(u(),1);var d=class extends a.EntityDialog{constructor(){super();this.form=new D(this.idPrefix);this.form.Password.change(()=>{a.EditorUtils.setRequired(this.form.PasswordConfirm,this.form.Password.value.length>0)}),this.form.Password.addValidationRule(this.uniqueName,e=>{if(this.form.Password.value.length<6)return(0,h.format)((0,h.localText)(g.Validation.MinRequiredPasswordLength),6)}),this.form.PasswordConfirm.addValidationRule(this.uniqueName,e=>{if(this.form.Password.value!=this.form.PasswordConfirm.value)return(0,h.localText)(g.Validation.PasswordConfirmMismatch)})}getFormKey(){return D.formKey}getIdProperty(){return n.idProperty}getIsActiveProperty(){return n.isActiveProperty}getLocalTextPrefix(){return n.localTextPrefix}getNameProperty(){return n.nameProperty}getService(){return y.baseUrl}getToolbarButtons(){let e=super.getToolbarButtons();return e.push({title:(0,h.localText)(g.Site.UserDialog.EditPermissionsButton),cssClass:"edit-permissions-button",icon:"fa-lock text-green",onClick:()=>{new P({userID:this.entity.UserId,username:this.entity.Username}).dialogOpen()}}),e.push({title:(0,h.localText)("Refresh User Data"),icon:"fa-recycle text-green",cssClass:"refresh-user-button",separator:!0,onClick:()=>{this.refreshUserData()}}),e}updateInterface(){super.updateInterface(),this.toolbar.findButton("edit-permissions-button").toggleClass("disabled",this.isNewOrDeleted())}afterLoadEntity(){super.afterLoadEntity(),this.form.Source.value.toLowerCase()=="win"?(a.EditorUtils.setReadOnly(this.form.Username,!0),this.form.Password.getGridField().hide(),this.form.PasswordConfirm.getGridField().hide()):(this.form.Password.element.toggleClass("required",this.isNew()).closest(".field").find("sup").toggle(this.isNew()),this.form.PasswordConfirm.element.toggleClass("required",this.isNew()).closest(".field").find("sup").toggle(this.isNew()))}refreshUserData(){if(this.entity.Username.indexOf("\\")>1){var e="The user's cached site details have been removed. The user's roles have also been re-queried from Windows.",t=`

If this user had other roles manually assigned, the additional roles will have been removed and you may need to re-assign some.`,s=`

The user may need to request a refresh via their Profile page, or log out and back in, to see an updated Dashboard in some cases.`;(0,a.confirmDialog)(`PRESERVE existing roles not corresponding
to Windows network groups
for `+this.entity.Username+` (answer 'Yes') ?

Answering 'No' will REMOVE roles that may have been manually assigned. 

Use the Close box to cancel.`,()=>l(this.entityId,this.entity.Username,e+s,!1),{onNo:()=>l(this.entityId,this.entity.Username,e+t+s,!0)})}else{var e="The user's cached site details have been removed.",t=`

The user may need to request a refresh via their Profile page, or log out and back in, to see an updated Dashboard in some cases.`;l(this.entityId,this.entity.Username,e+t,!1)}}};p(d,"UserDialog"),d=f([a.Decorators.registerClass()],d);var m=class extends w.EntityGrid{getColumnsKey(){return b.columnsKey}getDialogType(){return d}getIdProperty(){return n.idProperty}getIsActiveProperty(){return n.isActiveProperty}getLocalTextPrefix(){return n.localTextPrefix}getService(){return y.baseUrl}constructor(r){super(r)}getDefaultSortBy(){return[n.Fields.Username]}createIncludeDeletedButton(){}getColumns(){let r=super.getColumns();var t=new b(r).Roles;if(t){var s;x.getLookupAsync().then(i=>{s=i,this.slickGrid.invalidate()}),t.format=i=>{if(!s)return'<i class="fa fa-spinner"></i>';var C=(i.value||[]).map(k=>(s.itemById[k]||{}).RoleName||"");return C.sort(),C.join(", ")}}return r.splice(1,0,{field:"Refresh User",name:"",format:i=>`<a class="inline-action recycle-cache text-green" title="refresh user data">
                    <i class="fa fa-recycle"></i></a>`,width:24,minWidth:24,maxWidth:24}),r}onClick(r,e,t){if(super.onClick(r,e,t),!r.isDefaultPrevented()){var s=this.itemAt(e),i=$(r.target);i.parent().hasClass("inline-action")&&(i=i.parent()),i.hasClass("inline-action")&&(r.preventDefault(),i.hasClass("recycle-cache")&&this.refreshUserData(s.UserId,s.Username))}}refreshUserData(r,e){if(e.indexOf("\\")>1){var t="The user's cached site details have been removed. The user's roles have also been re-queried from Windows.",s=`

If this user had other roles manually assigned, the additional roles will have been removed and you may need to re-assign some.`,i=`

The user may need to request a refresh via their Profile page, or log out and back in, to see an updated Dashboard in some cases.`;(0,I.confirmDialog)(`PRESERVE existing roles not corresponding
to Windows network groups
for `+e+` (answer 'Yes') ?

Answering 'No' will REMOVE roles that may have been manually assigned. 

Use the Close box to cancel.`,()=>l(r,e,t+i,!1),{onNo:()=>l(r,e,t+s+i,!0)})}else{var t="The user's cached site details have been removed.",s=`

The user may need to request a refresh via their Profile page, or log out and back in, to see an updated Dashboard in some cases.`;l(r,e,t+s,!1)}}};p(m,"UserGrid"),m=f([w.Decorators.registerClass()],m);$(function(){(0,E.initFullHeightGridPage)(new m($("#GridDiv")).element)});
//# sourceMappingURL=UserPage.js.map
