{
  "version": 3,
  "sources": ["../../../Modules/ServerTypes/Membership/LoginForm.ts", "../../../Modules/ServerTypes/Membership/SignUpForm.ts", "../../../Modules/ServerTypes/Membership/MyProfileColumns.ts", "../../../Modules/ServerTypes/Membership/MyProfileForm.ts", "../../../Modules/ServerTypes/Membership/MyProfileRow.ts", "../../../Modules/ServerTypes/Membership/MyProfileService.ts"],
  "sourcesContent": ["\uFEFFimport { PrefixedContext } from \"@serenity-is/corelib\";\n\nexport interface LoginForm {\n}\n\nexport class LoginForm extends PrefixedContext {\n    static readonly formKey = 'Membership.Login';\n}", "\uFEFFimport { PrefixedContext } from \"@serenity-is/corelib\";\n\nexport interface SignUpForm {\n}\n\nexport class SignUpForm extends PrefixedContext {\n    static readonly formKey = 'Membership.SignUp';\n}", "\uFEFFimport { ColumnsBase, fieldsProxy } from \"@serenity-is/corelib\";\r\nimport { Column } from \"@serenity-is/sleekgrid\";\r\nimport { MyProfileRow } from \"./MyProfileRow\";\r\n\r\nexport interface MyProfileColumns {\r\n    UserId: Column<MyProfileRow>;\r\n    Username: Column<MyProfileRow>;\r\n    DisplayName: Column<MyProfileRow>;\r\n    FormInitials: Column<MyProfileRow>;\r\n    Email: Column<MyProfileRow>;\r\n    UserImage: Column<MyProfileRow>;\r\n}\r\n\r\nexport class MyProfileColumns extends ColumnsBase<MyProfileRow> {\r\n    static readonly columnsKey = 'Membership.MyProfile';\r\n    static readonly Fields = fieldsProxy<MyProfileColumns>();\r\n}", "\uFEFFimport { PrefixedContext } from \"@serenity-is/corelib\";\n\nexport interface MyProfileForm {\n}\n\nexport class MyProfileForm extends PrefixedContext {\n    static readonly formKey = 'Membership.MyProfile';\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib\";\r\n\r\nexport interface MyProfileRow {\r\n    UserId?: number;\r\n    Username?: string;\r\n    DisplayName?: string;\r\n    Email?: string;\r\n    FormInitials?: string;\r\n    UserImage?: string;\r\n}\r\n\r\nexport abstract class MyProfileRow {\r\n    static readonly idProperty = 'UserId';\r\n    static readonly nameProperty = 'Username';\r\n    static readonly localTextPrefix = 'Membership.MyProfile';\r\n    static readonly deletePermission = 'None';\r\n    static readonly insertPermission = 'None';\r\n    static readonly readPermission = '*';\r\n    static readonly updatePermission = '*';\r\n\r\n    static readonly Fields = fieldsProxy<MyProfileRow>();\r\n}", "\uFEFFimport { ServiceOptions, serviceRequest } from \"@serenity-is/corelib\";\nimport { ListRequest } from \"../Services/ListRequest\";\nimport { ListResponse } from \"../Services/ListResponse\";\nimport { RetrieveRequest } from \"../Services/RetrieveRequest\";\nimport { RetrieveResponse } from \"../Services/RetrieveResponse\";\nimport { SaveRequest } from \"../Services/SaveRequest\";\nimport { SaveResponse } from \"../Services/SaveResponse\";\nimport { MyProfileRow } from \"./MyProfileRow\";\n\nexport namespace MyProfileService {\n    export const baseUrl = 'Membership/MyProfile';\n\n    export declare function Create(request: SaveRequest<MyProfileRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MyProfileRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MyProfileRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MyProfileRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"Membership/MyProfile/Create\",\n        Update: \"Membership/MyProfile/Update\",\n        Retrieve: \"Membership/MyProfile/Retrieve\",\n        List: \"Membership/MyProfile/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MyProfileService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}"],
  "mappings": "sDAAC,IAAAA,EAAgC,SAK1B,IAAMC,EAAN,MAAMA,UAAkB,iBAAgB,CAE/C,EAF+CC,EAAAD,EAAA,aAAlCA,EACO,QAAU,mBADvB,IAAME,EAANF,ECLN,IAAAG,EAAgC,SAK1B,IAAMC,EAAN,MAAMA,UAAmB,iBAAgB,CAEhD,EAFgDC,EAAAD,EAAA,cAAnCA,EACO,QAAU,oBADvB,IAAME,EAANF,ECLN,IAAAG,EAAyC,SAanC,IAAMC,EAAN,MAAMA,UAAyB,aAA0B,CAGhE,EAHgEC,EAAAD,EAAA,oBAAnDA,EACO,WAAa,uBADpBA,EAEO,UAAS,eAA8B,EAFpD,IAAME,EAANF,ECbN,IAAAG,EAAgC,SAK1B,IAAMC,EAAN,MAAMA,UAAsB,iBAAgB,CAEnD,EAFmDC,EAAAD,EAAA,iBAAtCA,EACO,QAAU,uBADvB,IAAME,EAANF,ECLN,IAAAG,EAA4B,SAWtB,IAAeC,EAAf,MAAeA,CAAa,CAUnC,EAVmCC,EAAAD,EAAA,gBAAbA,EACF,WAAa,SADXA,EAEF,aAAe,WAFbA,EAGF,gBAAkB,uBAHhBA,EAIF,iBAAmB,OAJjBA,EAKF,iBAAmB,OALjBA,EAMF,eAAiB,IANfA,EAOF,iBAAmB,IAPjBA,EASF,UAAS,eAA0B,EAThD,IAAeE,EAAfF,ECXN,IAAAG,EAA+C,SAS/BC,OACAA,EAAA,QAAU,uBAOVA,EAAA,QAAU,CACnB,OAAQ,8BACR,OAAQ,8BACR,SAAU,gCACV,KAAM,2BACV,EAEA,CACI,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAkBC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CAC5C,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IAxBYJ,MAAA",
  "names": ["import_corelib", "_LoginForm", "__name", "LoginForm", "import_corelib", "_SignUpForm", "__name", "SignUpForm", "import_corelib", "_MyProfileColumns", "__name", "MyProfileColumns", "import_corelib", "_MyProfileForm", "__name", "MyProfileForm", "import_corelib", "_MyProfileRow", "__name", "MyProfileRow", "import_corelib", "MyProfileService", "x", "r", "s", "o"]
}
